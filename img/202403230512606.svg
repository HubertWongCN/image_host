<svg id="SvgjsSvg1006" width="672" height="573" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs"><defs id="SvgjsDefs1007"><pattern patternUnits="userSpaceOnUse" id="pattern_mark_0" width="300" height="300"><text x="150" y="100" fill="rgba(229,229,229,0.8)" font-size="18" transform="rotate(-45, 150, 150)" style="dominant-baseline: middle; text-anchor: middle;"></text></pattern><pattern patternUnits="userSpaceOnUse" id="pattern_mark_1" width="300" height="300"><text x="150" y="200" fill="rgba(229,229,229,0.8)" font-size="18" transform="rotate(-45, 150, 150)" style="dominant-baseline: middle; text-anchor: middle;"></text></pattern></defs><rect id="svgbackgroundid" width="672" height="573" fill="transparent"></rect><rect id="SvgjsRect1009" width="672" height="573" fill="url(#pattern_mark_0)"></rect><rect id="SvgjsRect1010" width="672" height="573" fill="url(#pattern_mark_1)"></rect><g id="SvgjsG1011" transform="translate(25,25)"><path id="SvgjsPath1012" d="M 0 0L 606 0L 622 16L 622 523L 0 523L 0 0Z" stroke="none" fill-opacity="1" fill="#fff7bc"></path><path id="SvgjsPath1013" d="M 606 0L 606 16L 622 16Z" stroke="none" fill-opacity="1" fill="#e4d089"></path><path id="SvgjsPath1014" d="M 0 0L 606 0L 622 16L 622 523L 0 523L 0 0Z" stroke="none" fill="none"></path><g id="SvgjsG1015"><text id="SvgjsText1016" font-family="&quot;Comic Sans MS&quot;" text-anchor="start" font-size="13px" width="602px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="&quot;Comic Sans MS&quot;" size="13px" weight="400" font-style="" opacity="1" y="31.375" transform="rotate(0)"><tspan id="SvgjsTspan1017" dy="16.25" x="10"><tspan id="SvgjsTspan1018" style=""># MAXMEMORY POLICY: how Redis will select what to remove when maxmemory</tspan></tspan><tspan id="SvgjsTspan1019" dy="16.25" x="10"><tspan id="SvgjsTspan1020" style=""># is reached. You can select one from the following behaviors:</tspan></tspan><tspan id="SvgjsTspan1021" dy="16.25" x="10"><tspan id="SvgjsTspan1022" style="">#</tspan></tspan><tspan id="SvgjsTspan1023" dy="16.25" x="10"><tspan id="SvgjsTspan1024" style=""># volatile-lru -&gt; Evict using approximated LRU, only keys with an expire set.</tspan></tspan><tspan id="SvgjsTspan1025" dy="16.25" x="10"><tspan id="SvgjsTspan1026" style=""># allkeys-lru -&gt; Evict any key using approximated LRU.</tspan></tspan><tspan id="SvgjsTspan1027" dy="16.25" x="10"><tspan id="SvgjsTspan1028" style=""># volatile-lfu -&gt; Evict using approximated LFU, only keys with an expire set.</tspan></tspan><tspan id="SvgjsTspan1029" dy="16.25" x="10"><tspan id="SvgjsTspan1030" style=""># allkeys-lfu -&gt; Evict any key using approximated LFU.</tspan></tspan><tspan id="SvgjsTspan1031" dy="16.25" x="10"><tspan id="SvgjsTspan1032" style=""># volatile-random -&gt; Remove a random key having an expire set.</tspan></tspan><tspan id="SvgjsTspan1033" dy="16.25" x="10"><tspan id="SvgjsTspan1034" style=""># allkeys-random -&gt; Remove a random key, any key.</tspan></tspan><tspan id="SvgjsTspan1035" dy="16.25" x="10"><tspan id="SvgjsTspan1036" style=""># volatile-ttl -&gt; Remove the key with the nearest expire time (minor TTL)</tspan></tspan><tspan id="SvgjsTspan1037" dy="16.25" x="10"><tspan id="SvgjsTspan1038" style=""># noeviction -&gt; Don't evict anything, just return an error on write operations.</tspan></tspan><tspan id="SvgjsTspan1039" dy="16.25" x="10"><tspan id="SvgjsTspan1040" style="">#</tspan></tspan><tspan id="SvgjsTspan1041" dy="16.25" x="10"><tspan id="SvgjsTspan1042" style=""># LRU means Least Recently Used</tspan></tspan><tspan id="SvgjsTspan1043" dy="16.25" x="10"><tspan id="SvgjsTspan1044" style=""># LFU means Least Frequently Used</tspan></tspan><tspan id="SvgjsTspan1045" dy="16.25" x="10"><tspan id="SvgjsTspan1046" style="">#</tspan></tspan><tspan id="SvgjsTspan1047" dy="16.25" x="10"><tspan id="SvgjsTspan1048" style=""># Both LRU, LFU and volatile-ttl are implemented using approximated</tspan></tspan><tspan id="SvgjsTspan1049" dy="16.25" x="10"><tspan id="SvgjsTspan1050" style=""># randomized algorithms.</tspan></tspan><tspan id="SvgjsTspan1051" dy="16.25" x="10"><tspan id="SvgjsTspan1052" style="">#</tspan></tspan><tspan id="SvgjsTspan1053" dy="16.25" x="10"><tspan id="SvgjsTspan1054" style=""># Note: with any of the above policies, when there are no suitable keys for</tspan></tspan><tspan id="SvgjsTspan1055" dy="16.25" x="10"><tspan id="SvgjsTspan1056" style=""># eviction, Redis will return an error on write operations that require</tspan></tspan><tspan id="SvgjsTspan1057" dy="16.25" x="10"><tspan id="SvgjsTspan1058" style=""># more memory. These are usually commands that create new keys, add data or</tspan></tspan><tspan id="SvgjsTspan1059" dy="16.25" x="10"><tspan id="SvgjsTspan1060" style=""># modify existing keys. A few examples are: SET, INCR, HSET, LPUSH, SUNIONSTORE,</tspan></tspan><tspan id="SvgjsTspan1061" dy="16.25" x="10"><tspan id="SvgjsTspan1062" style=""># SORT (due to the STORE argument), and EXEC (if the transaction includes any</tspan></tspan><tspan id="SvgjsTspan1063" dy="16.25" x="10"><tspan id="SvgjsTspan1064" style=""># command that requires memory).</tspan></tspan><tspan id="SvgjsTspan1065" dy="16.25" x="10"><tspan id="SvgjsTspan1066" style="">#</tspan></tspan><tspan id="SvgjsTspan1067" dy="16.25" x="10"><tspan id="SvgjsTspan1068" style=""># The default is:</tspan></tspan><tspan id="SvgjsTspan1069" dy="16.25" x="10"><tspan id="SvgjsTspan1070" style="">#</tspan></tspan><tspan id="SvgjsTspan1071" dy="16.25" x="10"><tspan id="SvgjsTspan1072" style=""># maxmemory-policy noeviction</tspan></tspan></text></g></g><g id="SvgjsG1073" transform="translate(33,107)"><path id="SvgjsPath1074" d="M 0 0L 480 0L 480 131L 0 131Z" stroke="rgba(91,121,232,1)" stroke-width="1.5" fill="none"></path><g id="SvgjsG1075"><text id="SvgjsText1076" font-family="&quot;Comic Sans MS&quot;" text-anchor="middle" font-size="13px" width="460px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="&quot;Comic Sans MS&quot;" size="13px" weight="400" font-style="" opacity="1" y="54.875" transform="rotate(0)"></text></g></g><g id="SvgjsG1077" transform="translate(33,465)"><path id="SvgjsPath1078" d="M 0 0L 199 0L 199 54L 0 54Z" stroke="rgba(167,147,44,1)" stroke-width="1.5" fill="none"></path><g id="SvgjsG1079"><text id="SvgjsText1080" font-family="&quot;Comic Sans MS&quot;" text-anchor="middle" font-size="13px" width="179px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="&quot;Comic Sans MS&quot;" size="13px" weight="400" font-style="" opacity="1" y="16.375" transform="rotate(0)"></text></g></g></svg>