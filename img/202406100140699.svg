<svg id="SvgjsSvg1397" width="1797" height="1378" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs"><defs id="SvgjsDefs1398"><pattern patternUnits="userSpaceOnUse" id="pattern_mark_0" width="300" height="300"><text x="150" y="100" fill="rgba(229,229,229,0.8)" font-size="18" transform="rotate(-45, 150, 150)" style="dominant-baseline: middle; text-anchor: middle;"></text></pattern><pattern patternUnits="userSpaceOnUse" id="pattern_mark_1" width="300" height="300"><text x="150" y="200" fill="rgba(229,229,229,0.8)" font-size="18" transform="rotate(-45, 150, 150)" style="dominant-baseline: middle; text-anchor: middle;"></text></pattern><marker id="SvgjsMarker1716" markerWidth="13" markerHeight="9" refX="9.5" refY="4.5" viewBox="0 0 13 9" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1717" d="M0,0 L13,4.5 L0,9 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1724" markerWidth="13" markerHeight="9" refX="9.5" refY="4.5" viewBox="0 0 13 9" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1725" d="M0,0 L13,4.5 L0,9 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1732" markerWidth="13" markerHeight="9" refX="9.5" refY="4.5" viewBox="0 0 13 9" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1733" d="M0,0 L13,4.5 L0,9 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1740" markerWidth="13" markerHeight="9" refX="9.5" refY="4.5" viewBox="0 0 13 9" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1741" d="M0,0 L13,4.5 L0,9 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1748" markerWidth="13" markerHeight="9" refX="9.5" refY="4.5" viewBox="0 0 13 9" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1749" d="M0,0 L13,4.5 L0,9 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1756" markerWidth="13" markerHeight="9" refX="9.5" refY="4.5" viewBox="0 0 13 9" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1757" d="M0,0 L13,4.5 L0,9 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1764" markerWidth="13" markerHeight="9" refX="9.5" refY="4.5" viewBox="0 0 13 9" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1765" d="M0,0 L13,4.5 L0,9 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker></defs><rect id="svgbackgroundid" width="1797" height="1378" fill="transparent"></rect><rect id="SvgjsRect1400" width="1797" height="1378" fill="url(#pattern_mark_0)"></rect><rect id="SvgjsRect1401" width="1797" height="1378" fill="url(#pattern_mark_1)"></rect><g id="SvgjsG1402" transform="translate(934,54)"><path id="SvgjsPath1403" d="M 0 4Q 0 0 4 0L 365 0Q 369 0 369 4L 369 130Q 369 134 365 134L 4 134Q 0 134 0 130Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1404" d="M 0 30L 369 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1405" d="M 0 0L 369 0L 369 134L 0 134Z" stroke="none" fill="none"></path><g id="SvgjsG1406"><text id="SvgjsText1407" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="349px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1408" dy="16.25" x="184.5"><tspan id="SvgjsTspan1409" style="">AbstractQueuedSynchronizer</tspan></tspan></text></g><g id="SvgjsG1410"><text id="SvgjsText1411" font-family="微软雅黑" text-anchor="start" font-size="13px" width="349px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="38.875" transform="rotate(0)"><tspan id="SvgjsTspan1412" dy="16.25" x="10"><tspan id="SvgjsTspan1413" style="">public final void acquire(int arg) {</tspan></tspan><tspan id="SvgjsTspan1414" dy="16.25" x="10"><tspan id="SvgjsTspan1415" style="">    if (!tryAcquire(arg) &amp;&amp;</tspan></tspan><tspan id="SvgjsTspan1416" dy="16.25" x="10"><tspan id="SvgjsTspan1417" style="">        acquireQueued(addWaiter(Node.EXCLUSIVE), arg))</tspan></tspan><tspan id="SvgjsTspan1418" dy="16.25" x="10"><tspan id="SvgjsTspan1419" style="">        selfInterrupt();</tspan></tspan><tspan id="SvgjsTspan1420" dy="16.25" x="10"><tspan id="SvgjsTspan1421" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1422" transform="translate(465,288)"><path id="SvgjsPath1423" d="M 0 4Q 0 0 4 0L 365 0Q 369 0 369 4L 369 89Q 369 93 365 93L 4 93Q 0 93 0 89Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1424" d="M 0 30L 369 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1425" d="M 0 0L 369 0L 369 93L 0 93Z" stroke="none" fill="none"></path><g id="SvgjsG1426"><text id="SvgjsText1427" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="349px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1428" dy="16.25" x="184.5"><tspan id="SvgjsTspan1429" style="">AbstractQueuedSynchronizer</tspan></tspan></text></g><g id="SvgjsG1430"><text id="SvgjsText1431" font-family="微软雅黑" text-anchor="start" font-size="13px" width="349px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="34.375" transform="rotate(0)"><tspan id="SvgjsTspan1432" dy="16.25" x="10"><tspan id="SvgjsTspan1433" style="">protected boolean tryAcquire(int arg) {</tspan></tspan><tspan id="SvgjsTspan1434" dy="16.25" x="10"><tspan id="SvgjsTspan1435" style="">    throw new UnsupportedOperationException();</tspan></tspan><tspan id="SvgjsTspan1436" dy="16.25" x="10"><tspan id="SvgjsTspan1437" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1438" transform="translate(465,456)"><path id="SvgjsPath1439" d="M 0 4Q 0 0 4 0L 365 0Q 369 0 369 4L 369 89Q 369 93 365 93L 4 93Q 0 93 0 89Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1440" d="M 0 30L 369 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1441" d="M 0 0L 369 0L 369 93L 0 93Z" stroke="none" fill="none"></path><g id="SvgjsG1442"><text id="SvgjsText1443" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="349px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1444" dy="16.25" x="184.5"><tspan id="SvgjsTspan1445" style="">NonfairSync</tspan></tspan></text></g><g id="SvgjsG1446"><text id="SvgjsText1447" font-family="微软雅黑" text-anchor="start" font-size="13px" width="349px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="34.375" transform="rotate(0)"><tspan id="SvgjsTspan1448" dy="16.25" x="10"><tspan id="SvgjsTspan1449" style="">protected final boolean tryAcquire(int acquires) {</tspan></tspan><tspan id="SvgjsTspan1450" dy="16.25" x="10"><tspan id="SvgjsTspan1451" style="">    return nonfairTryAcquire(acquires);</tspan></tspan><tspan id="SvgjsTspan1452" dy="16.25" x="10"><tspan id="SvgjsTspan1453" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1454" transform="translate(25,456)"><path id="SvgjsPath1455" d="M 0 4Q 0 0 4 0L 371 0Q 375 0 375 4L 375 365Q 375 369 371 369L 4 369Q 0 369 0 365Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1456" d="M 0 30L 375 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1457" d="M 0 0L 375 0L 375 369L 0 369Z" stroke="none" fill="none"></path><g id="SvgjsG1458"><text id="SvgjsText1459" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="355px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1460" dy="16.25" x="187.5"><tspan id="SvgjsTspan1461" style="">FairSync</tspan></tspan></text></g><g id="SvgjsG1462"><text id="SvgjsText1463" font-family="微软雅黑" text-anchor="start" font-size="13px" width="355px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="34.375" transform="rotate(0)"><tspan id="SvgjsTspan1464" dy="16.25" x="10"><tspan id="SvgjsTspan1465" style="">protected final boolean tryAcquire(int acquires) {</tspan></tspan><tspan id="SvgjsTspan1466" dy="16.25" x="10"><tspan id="SvgjsTspan1467" style="">    final Thread current = Thread.currentThread();</tspan></tspan><tspan id="SvgjsTspan1468" dy="16.25" x="10"><tspan id="SvgjsTspan1469" style="">    int c = getState();</tspan></tspan><tspan id="SvgjsTspan1470" dy="16.25" x="10"><tspan id="SvgjsTspan1471" style="">    if (c == 0) {</tspan></tspan><tspan id="SvgjsTspan1472" dy="16.25" x="10"><tspan id="SvgjsTspan1473" style="">        if (!hasQueuedPredecessors() &amp;&amp;</tspan></tspan><tspan id="SvgjsTspan1474" dy="16.25" x="10"><tspan id="SvgjsTspan1475" style="">            compareAndSetState(0, acquires)) {</tspan></tspan><tspan id="SvgjsTspan1476" dy="16.25" x="10"><tspan id="SvgjsTspan1477" style="">            setExclusiveOwnerThread(current);</tspan></tspan><tspan id="SvgjsTspan1478" dy="16.25" x="10"><tspan id="SvgjsTspan1479" style="">            return true;</tspan></tspan><tspan id="SvgjsTspan1480" dy="16.25" x="10"><tspan id="SvgjsTspan1481" style="">        }</tspan></tspan><tspan id="SvgjsTspan1482" dy="16.25" x="10"><tspan id="SvgjsTspan1483" style="">    }</tspan></tspan><tspan id="SvgjsTspan1484" dy="16.25" x="10"><tspan id="SvgjsTspan1485" style="">    else if (current == getExclusiveOwnerThread()) {</tspan></tspan><tspan id="SvgjsTspan1486" dy="16.25" x="10"><tspan id="SvgjsTspan1487" style="">        int nextc = c + acquires;</tspan></tspan><tspan id="SvgjsTspan1488" dy="16.25" x="10"><tspan id="SvgjsTspan1489" style="">        if (nextc &lt; 0)</tspan></tspan><tspan id="SvgjsTspan1490" dy="16.25" x="10"><tspan id="SvgjsTspan1491" style="">            throw new Error("Maximum lock count exceeded"</tspan></tspan><tspan id="SvgjsTspan1492" dy="16.25" x="10"><tspan id="SvgjsTspan1493" style="">);</tspan></tspan><tspan id="SvgjsTspan1494" dy="16.25" x="10"><tspan id="SvgjsTspan1495" style="">        setState(nextc);</tspan></tspan><tspan id="SvgjsTspan1496" dy="16.25" x="10"><tspan id="SvgjsTspan1497" style="">        return true;</tspan></tspan><tspan id="SvgjsTspan1498" dy="16.25" x="10"><tspan id="SvgjsTspan1499" style="">    }</tspan></tspan><tspan id="SvgjsTspan1500" dy="16.25" x="10"><tspan id="SvgjsTspan1501" style="">    return false;</tspan></tspan><tspan id="SvgjsTspan1502" dy="16.25" x="10"><tspan id="SvgjsTspan1503" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1504" transform="translate(934,288)"><path id="SvgjsPath1505" d="M 0 4Q 0 0 4 0L 365 0Q 369 0 369 4L 369 300Q 369 304 365 304L 4 304Q 0 304 0 300Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1506" d="M 0 30L 369 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1507" d="M 0 0L 369 0L 369 304L 0 304Z" stroke="none" fill="none"></path><g id="SvgjsG1508"><text id="SvgjsText1509" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="349px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1510" dy="16.25" x="184.5"><tspan id="SvgjsTspan1511" style="">AbstractQueuedSynchronizer</tspan></tspan></text></g><g id="SvgjsG1512"><text id="SvgjsText1513" font-family="微软雅黑" text-anchor="start" font-size="13px" width="349px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="34.375" transform="rotate(0)"><tspan id="SvgjsTspan1514" dy="16.25" x="10"><tspan id="SvgjsTspan1515" style="">private Node addWaiter(Node mode) {</tspan></tspan><tspan id="SvgjsTspan1516" dy="16.25" x="10"><tspan id="SvgjsTspan1517" style="">    Node node = new Node(Thread.currentThread(), mode</tspan></tspan><tspan id="SvgjsTspan1518" dy="16.25" x="10"><tspan id="SvgjsTspan1519" style="">);</tspan></tspan><tspan id="SvgjsTspan1520" dy="16.25" x="10"><tspan id="SvgjsTspan1521" style="">    // Try the fast path of enq; backup to full enq on failu</tspan></tspan><tspan id="SvgjsTspan1522" dy="16.25" x="10"><tspan id="SvgjsTspan1523" style="">re</tspan></tspan><tspan id="SvgjsTspan1524" dy="16.25" x="10"><tspan id="SvgjsTspan1525" style="">    Node pred = tail;</tspan></tspan><tspan id="SvgjsTspan1526" dy="16.25" x="10"><tspan id="SvgjsTspan1527" style="">    if (pred != null) {</tspan></tspan><tspan id="SvgjsTspan1528" dy="16.25" x="10"><tspan id="SvgjsTspan1529" style="">        node.prev = pred;</tspan></tspan><tspan id="SvgjsTspan1530" dy="16.25" x="10"><tspan id="SvgjsTspan1531" style="">        if (compareAndSetTail(pred, node)) {</tspan></tspan><tspan id="SvgjsTspan1532" dy="16.25" x="10"><tspan id="SvgjsTspan1533" style="">            pred.next = node;</tspan></tspan><tspan id="SvgjsTspan1534" dy="16.25" x="10"><tspan id="SvgjsTspan1535" style="">            return node;</tspan></tspan><tspan id="SvgjsTspan1536" dy="16.25" x="10"><tspan id="SvgjsTspan1537" style="">        }</tspan></tspan><tspan id="SvgjsTspan1538" dy="16.25" x="10"><tspan id="SvgjsTspan1539" style="">    }</tspan></tspan><tspan id="SvgjsTspan1540" dy="16.25" x="10"><tspan id="SvgjsTspan1541" style="">    enq(node);</tspan></tspan><tspan id="SvgjsTspan1542" dy="16.25" x="10"><tspan id="SvgjsTspan1543" style="">    return node;</tspan></tspan><tspan id="SvgjsTspan1544" dy="16.25" x="10"><tspan id="SvgjsTspan1545" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1546" transform="translate(1403,288)"><path id="SvgjsPath1547" d="M 0 4Q 0 0 4 0L 365 0Q 369 0 369 4L 369 381Q 369 385 365 385L 4 385Q 0 385 0 381Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1548" d="M 0 30L 369 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1549" d="M 0 0L 369 0L 369 385L 0 385Z" stroke="none" fill="none"></path><g id="SvgjsG1550"><text id="SvgjsText1551" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="349px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1552" dy="16.25" x="184.5"><tspan id="SvgjsTspan1553" style="">AbstractQueuedSynchronizer</tspan></tspan></text></g><g id="SvgjsG1554"><text id="SvgjsText1555" font-family="微软雅黑" text-anchor="start" font-size="13px" width="349px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="34.375" transform="rotate(0)"><tspan id="SvgjsTspan1556" dy="16.25" x="10"><tspan id="SvgjsTspan1557" style="">final boolean acquireQueued(final Node node, int arg) {</tspan></tspan><tspan id="SvgjsTspan1558" dy="16.25" x="10"><tspan id="SvgjsTspan1559" style="">    boolean failed = true;</tspan></tspan><tspan id="SvgjsTspan1560" dy="16.25" x="10"><tspan id="SvgjsTspan1561" style="">    try {</tspan></tspan><tspan id="SvgjsTspan1562" dy="16.25" x="10"><tspan id="SvgjsTspan1563" style="">        boolean interrupted = false;</tspan></tspan><tspan id="SvgjsTspan1564" dy="16.25" x="10"><tspan id="SvgjsTspan1565" style="">        for (;;) {</tspan></tspan><tspan id="SvgjsTspan1566" dy="16.25" x="10"><tspan id="SvgjsTspan1567" style="">            final Node p = node.predecessor();</tspan></tspan><tspan id="SvgjsTspan1568" dy="16.25" x="10"><tspan id="SvgjsTspan1569" style="">            if (p == head &amp;&amp; tryAcquire(arg)) {</tspan></tspan><tspan id="SvgjsTspan1570" dy="16.25" x="10"><tspan id="SvgjsTspan1571" style="">                setHead(node);</tspan></tspan><tspan id="SvgjsTspan1572" dy="16.25" x="10"><tspan id="SvgjsTspan1573" style="">                p.next = null; // help GC</tspan></tspan><tspan id="SvgjsTspan1574" dy="16.25" x="10"><tspan id="SvgjsTspan1575" style="">                failed = false;</tspan></tspan><tspan id="SvgjsTspan1576" dy="16.25" x="10"><tspan id="SvgjsTspan1577" style="">                return interrupted;</tspan></tspan><tspan id="SvgjsTspan1578" dy="16.25" x="10"><tspan id="SvgjsTspan1579" style="">            }</tspan></tspan><tspan id="SvgjsTspan1580" dy="16.25" x="10"><tspan id="SvgjsTspan1581" style="">            if (shouldParkAfterFailedAcquire(p, node) &amp;&amp;</tspan></tspan><tspan id="SvgjsTspan1582" dy="16.25" x="10"><tspan id="SvgjsTspan1583" style="">                parkAndCheckInterrupt())</tspan></tspan><tspan id="SvgjsTspan1584" dy="16.25" x="10"><tspan id="SvgjsTspan1585" style="">                interrupted = true;</tspan></tspan><tspan id="SvgjsTspan1586" dy="16.25" x="10"><tspan id="SvgjsTspan1587" style="">        }</tspan></tspan><tspan id="SvgjsTspan1588" dy="16.25" x="10"><tspan id="SvgjsTspan1589" style="">    } finally {</tspan></tspan><tspan id="SvgjsTspan1590" dy="16.25" x="10"><tspan id="SvgjsTspan1591" style="">        if (failed)</tspan></tspan><tspan id="SvgjsTspan1592" dy="16.25" x="10"><tspan id="SvgjsTspan1593" style="">            cancelAcquire(node);</tspan></tspan><tspan id="SvgjsTspan1594" dy="16.25" x="10"><tspan id="SvgjsTspan1595" style="">    }</tspan></tspan><tspan id="SvgjsTspan1596" dy="16.25" x="10"><tspan id="SvgjsTspan1597" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1598" transform="translate(934,692)"><path id="SvgjsPath1599" d="M 0 4Q 0 0 4 0L 365 0Q 369 0 369 4L 369 284Q 369 288 365 288L 4 288Q 0 288 0 284Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1600" d="M 0 30L 369 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1601" d="M 0 0L 369 0L 369 288L 0 288Z" stroke="none" fill="none"></path><g id="SvgjsG1602"><text id="SvgjsText1603" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="349px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1604" dy="16.25" x="184.5"><tspan id="SvgjsTspan1605" style="">AbstractQueuedSynchronizer</tspan></tspan></text></g><g id="SvgjsG1606"><text id="SvgjsText1607" font-family="微软雅黑" text-anchor="start" font-size="13px" width="349px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="34.375" transform="rotate(0)"><tspan id="SvgjsTspan1608" dy="16.25" x="10"><tspan id="SvgjsTspan1609" style="">private Node enq(final Node node) {</tspan></tspan><tspan id="SvgjsTspan1610" dy="16.25" x="10"><tspan id="SvgjsTspan1611" style="">    for (;;) {</tspan></tspan><tspan id="SvgjsTspan1612" dy="16.25" x="10"><tspan id="SvgjsTspan1613" style="">        Node t = tail;</tspan></tspan><tspan id="SvgjsTspan1614" dy="16.25" x="10"><tspan id="SvgjsTspan1615" style="">        if (t == null) { // Must initialize</tspan></tspan><tspan id="SvgjsTspan1616" dy="16.25" x="10"><tspan id="SvgjsTspan1617" style="">            if (compareAndSetHead(new Node()))</tspan></tspan><tspan id="SvgjsTspan1618" dy="16.25" x="10"><tspan id="SvgjsTspan1619" style="">                tail = head;</tspan></tspan><tspan id="SvgjsTspan1620" dy="16.25" x="10"><tspan id="SvgjsTspan1621" style="">        } else {</tspan></tspan><tspan id="SvgjsTspan1622" dy="16.25" x="10"><tspan id="SvgjsTspan1623" style="">            node.prev = t;</tspan></tspan><tspan id="SvgjsTspan1624" dy="16.25" x="10"><tspan id="SvgjsTspan1625" style="">            if (compareAndSetTail(t, node)) {</tspan></tspan><tspan id="SvgjsTspan1626" dy="16.25" x="10"><tspan id="SvgjsTspan1627" style="">                t.next = node;</tspan></tspan><tspan id="SvgjsTspan1628" dy="16.25" x="10"><tspan id="SvgjsTspan1629" style="">                return t;</tspan></tspan><tspan id="SvgjsTspan1630" dy="16.25" x="10"><tspan id="SvgjsTspan1631" style="">            }</tspan></tspan><tspan id="SvgjsTspan1632" dy="16.25" x="10"><tspan id="SvgjsTspan1633" style="">        }</tspan></tspan><tspan id="SvgjsTspan1634" dy="16.25" x="10"><tspan id="SvgjsTspan1635" style="">    }</tspan></tspan><tspan id="SvgjsTspan1636" dy="16.25" x="10"><tspan id="SvgjsTspan1637" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1638" transform="translate(1403,773)"><path id="SvgjsPath1639" d="M 0 4Q 0 0 4 0L 365 0Q 369 0 369 4L 369 576Q 369 580 365 580L 4 580Q 0 580 0 576Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1640" d="M 0 30L 369 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1641" d="M 0 0L 369 0L 369 580L 0 580Z" stroke="none" fill="none"></path><g id="SvgjsG1642"><text id="SvgjsText1643" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="349px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1644" dy="16.25" x="184.5"><tspan id="SvgjsTspan1645" style="">AbstractQueuedSynchronizer</tspan></tspan></text></g><g id="SvgjsG1646"><text id="SvgjsText1647" font-family="微软雅黑" text-anchor="start" font-size="13px" width="349px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="34.375" transform="rotate(0)"><tspan id="SvgjsTspan1648" dy="16.25" x="10"><tspan id="SvgjsTspan1649" style="">private void cancelAcquire(Node node) {</tspan></tspan><tspan id="SvgjsTspan1650" dy="16.25" x="10"><tspan id="SvgjsTspan1651" style="">    if (node == null)</tspan></tspan><tspan id="SvgjsTspan1652" dy="16.25" x="10"><tspan id="SvgjsTspan1653" style="">        return;</tspan></tspan><tspan id="SvgjsTspan1654" dy="16.25" x="10"><tspan id="SvgjsTspan1655" style=""> </tspan></tspan><tspan id="SvgjsTspan1656" dy="16.25" x="10"><tspan id="SvgjsTspan1657" style="">    node.thread = null;</tspan></tspan><tspan id="SvgjsTspan1658" dy="16.25" x="10"><tspan id="SvgjsTspan1659" style=""> </tspan></tspan><tspan id="SvgjsTspan1660" dy="16.25" x="10"><tspan id="SvgjsTspan1661" style="">    Node pred = node.prev;</tspan></tspan><tspan id="SvgjsTspan1662" dy="16.25" x="10"><tspan id="SvgjsTspan1663" style="">    while (pred.waitStatus &gt; 0)</tspan></tspan><tspan id="SvgjsTspan1664" dy="16.25" x="10"><tspan id="SvgjsTspan1665" style="">        node.prev = pred = pred.prev;</tspan></tspan><tspan id="SvgjsTspan1666" dy="16.25" x="10"><tspan id="SvgjsTspan1667" style=""> </tspan></tspan><tspan id="SvgjsTspan1668" dy="16.25" x="10"><tspan id="SvgjsTspan1669" style="">    Node predNext = pred.next;</tspan></tspan><tspan id="SvgjsTspan1670" dy="16.25" x="10"><tspan id="SvgjsTspan1671" style=""> </tspan></tspan><tspan id="SvgjsTspan1672" dy="16.25" x="10"><tspan id="SvgjsTspan1673" style="">    node.waitStatus = Node.CANCELLED;</tspan></tspan><tspan id="SvgjsTspan1674" dy="16.25" x="10"><tspan id="SvgjsTspan1675" style=""> </tspan></tspan><tspan id="SvgjsTspan1676" dy="16.25" x="10"><tspan id="SvgjsTspan1677" style="">    if (node == tail &amp;&amp; compareAndSetTail(node, pred)) {</tspan></tspan><tspan id="SvgjsTspan1678" dy="16.25" x="10"><tspan id="SvgjsTspan1679" style="">        compareAndSetNext(pred, predNext, null);</tspan></tspan><tspan id="SvgjsTspan1680" dy="16.25" x="10"><tspan id="SvgjsTspan1681" style="">    } else {</tspan></tspan><tspan id="SvgjsTspan1682" dy="16.25" x="10"><tspan id="SvgjsTspan1683" style="">        int ws;</tspan></tspan><tspan id="SvgjsTspan1684" dy="16.25" x="10"><tspan id="SvgjsTspan1685" style="">        if (pred != head &amp;&amp;</tspan></tspan><tspan id="SvgjsTspan1686" dy="16.25" x="10"><tspan id="SvgjsTspan1687" style="">            ((ws = pred.waitStatus) == Node.SIGNAL ||</tspan></tspan><tspan id="SvgjsTspan1688" dy="16.25" x="10"><tspan id="SvgjsTspan1689" style="">             (ws &lt;= 0 &amp;&amp; compareAndSetWaitStatus(pred, w</tspan></tspan><tspan id="SvgjsTspan1690" dy="16.25" x="10"><tspan id="SvgjsTspan1691" style="">s, Node.SIGNAL))) &amp;&amp;</tspan></tspan><tspan id="SvgjsTspan1692" dy="16.25" x="10"><tspan id="SvgjsTspan1693" style="">            pred.thread != null) {</tspan></tspan><tspan id="SvgjsTspan1694" dy="16.25" x="10"><tspan id="SvgjsTspan1695" style="">            Node next = node.next;</tspan></tspan><tspan id="SvgjsTspan1696" dy="16.25" x="10"><tspan id="SvgjsTspan1697" style="">            if (next != null &amp;&amp; next.waitStatus &lt;= 0)</tspan></tspan><tspan id="SvgjsTspan1698" dy="16.25" x="10"><tspan id="SvgjsTspan1699" style="">                compareAndSetNext(pred, predNext, next);</tspan></tspan><tspan id="SvgjsTspan1700" dy="16.25" x="10"><tspan id="SvgjsTspan1701" style="">        } else {</tspan></tspan><tspan id="SvgjsTspan1702" dy="16.25" x="10"><tspan id="SvgjsTspan1703" style="">            unparkSuccessor(node);</tspan></tspan><tspan id="SvgjsTspan1704" dy="16.25" x="10"><tspan id="SvgjsTspan1705" style="">        }</tspan></tspan><tspan id="SvgjsTspan1706" dy="16.25" x="10"><tspan id="SvgjsTspan1707" style=""> </tspan></tspan><tspan id="SvgjsTspan1708" dy="16.25" x="10"><tspan id="SvgjsTspan1709" style="">        node.next = node; // help GC</tspan></tspan><tspan id="SvgjsTspan1710" dy="16.25" x="10"><tspan id="SvgjsTspan1711" style="">    }</tspan></tspan><tspan id="SvgjsTspan1712" dy="16.25" x="10"><tspan id="SvgjsTspan1713" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1714"><path id="SvgjsPath1715" d="M1118.5 188.75L1118.5 238L1118.5 238L1118.5 285.3" stroke="#323232" stroke-width="1.5" fill="none" marker-end="url(#SvgjsMarker1716)"></path><rect id="SvgjsRect1718" width="109" height="16" x="1064" y="247.36950000000002" fill="#ffffff"></rect><text id="SvgjsText1719" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="109px" fill="#a7932c" font-weight="700" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="244.74450000000002" transform="rotate(0)"><tspan id="SvgjsTspan1720" dy="16.25" x="1118.5"><tspan id="SvgjsTspan1721" style="">2. 调用 addWaiter</tspan></tspan></text></g><g id="SvgjsG1722"><path id="SvgjsPath1723" d="M1118.5 188.75L1118.5 238L649.5 238L649.5 285.3" stroke="#323232" stroke-width="1.5" fill="none" marker-end="url(#SvgjsMarker1724)"></path><rect id="SvgjsRect1726" width="107" height="16" x="813.5841388400704" y="230" fill="#ffffff"></rect><text id="SvgjsText1727" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="107px" fill="#a7932c" font-weight="700" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="227.375" transform="rotate(0)"><tspan id="SvgjsTspan1728" dy="16.25" x="867.0841388400704"><tspan id="SvgjsTspan1729" style="">1. 调用 tryAcquire</tspan></tspan></text></g><g id="SvgjsG1730"><path id="SvgjsPath1731" d="M1118.5 188.75L1118.5 238L1587.5 238L1587.5 285.3" stroke="#323232" stroke-width="1.5" fill="none" marker-end="url(#SvgjsMarker1732)"></path><rect id="SvgjsRect1734" width="140" height="16" x="1280.0371265377855" y="230" fill="#ffffff"></rect><text id="SvgjsText1735" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="140px" fill="#a7932c" font-weight="700" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="227.375" transform="rotate(0)"><tspan id="SvgjsTspan1736" dy="16.25" x="1350.0371265377855"><tspan id="SvgjsTspan1737" style="">3. 调用 acquireQueued</tspan></tspan></text></g><g id="SvgjsG1738"><path id="SvgjsPath1739" d="M649.5 381.75L649.5 418.5L649.5 418.5L649.5 453.3" stroke="#323232" stroke-width="1.5" fill="none" marker-end="url(#SvgjsMarker1740)"></path><rect id="SvgjsRect1742" width="162" height="16" x="568.5" y="413.818" fill="#ffffff"></rect><text id="SvgjsText1743" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="162px" fill="#a7932c" font-weight="700" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="411.193" transform="rotate(0)"><tspan id="SvgjsTspan1744" dy="16.25" x="649.5"><tspan id="SvgjsTspan1745" style="">交由子类 NonfairSync 实现</tspan></tspan></text></g><g id="SvgjsG1746"><path id="SvgjsPath1747" d="M649.5 381.75L649.5 404.5L212.5 404.5L212.5 453.3" stroke="#323232" stroke-width="1.5" fill="none" marker-end="url(#SvgjsMarker1748)"></path><rect id="SvgjsRect1750" width="140" height="16" x="362.87392578124997" y="396.5" fill="#ffffff"></rect><text id="SvgjsText1751" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="140px" fill="#a7932c" font-weight="700" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="393.875" transform="rotate(0)"><tspan id="SvgjsTspan1752" dy="16.25" x="432.87392578124997"><tspan id="SvgjsTspan1753" style="">交由子类 FairSync 实现</tspan></tspan></text></g><g id="SvgjsG1754"><path id="SvgjsPath1755" d="M1118.5 592.75L1118.5 642L1118.5 642L1118.5 689.3" stroke="#323232" stroke-width="1.5" fill="none" marker-end="url(#SvgjsMarker1756)"></path><rect id="SvgjsRect1758" width="79" height="16" x="1079" y="630.1285" fill="#ffffff"></rect><text id="SvgjsText1759" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="79px" fill="#a7932c" font-weight="700" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="627.5035" transform="rotate(0)"><tspan id="SvgjsTspan1760" dy="16.25" x="1118.5"><tspan id="SvgjsTspan1761" style="">enq 入队操作</tspan></tspan></text></g><g id="SvgjsG1762"><path id="SvgjsPath1763" d="M1587.5 673.75L1587.5 723L1587.5 723L1587.5 770.3" stroke="#323232" stroke-width="1.5" fill="none" marker-end="url(#SvgjsMarker1764)"></path><rect id="SvgjsRect1766" width="118" height="16" x="1528.5" y="714.025" fill="#ffffff"></rect><text id="SvgjsText1767" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="118px" fill="#a7932c" font-weight="700" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="711.4" transform="rotate(0)"><tspan id="SvgjsTspan1768" dy="16.25" x="1587.5"><tspan id="SvgjsTspan1769" style="">调用 cancelAcquire</tspan></tspan></text></g><g id="SvgjsG1770" transform="translate(1025.25,25)"><path id="SvgjsPath1771" d="M 0 0L 186.5 0L 186.5 29.375L 0 29.375Z" stroke="none" fill="none"></path><g id="SvgjsG1772"><text id="SvgjsText1773" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="187px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="4.0625" transform="rotate(0)"><tspan id="SvgjsTspan1774" dy="16.25" x="93.5"><tspan id="SvgjsTspan1775" style="font-weight: bold;fill: rgb(167, 147, 44);">AQS acquire 主要有三条流程</tspan></tspan></text></g></g></svg>