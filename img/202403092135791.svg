<svg id="SvgjsSvg1006" width="1797" height="1378" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs"><defs id="SvgjsDefs1007"><pattern patternUnits="userSpaceOnUse" id="pattern_mark_0" width="300" height="300"><text x="150" y="100" fill="rgba(229,229,229,0.8)" font-size="18" transform="rotate(-45, 150, 150)" style="dominant-baseline: middle; text-anchor: middle;"></text></pattern><pattern patternUnits="userSpaceOnUse" id="pattern_mark_1" width="300" height="300"><text x="150" y="200" fill="rgba(229,229,229,0.8)" font-size="18" transform="rotate(-45, 150, 150)" style="dominant-baseline: middle; text-anchor: middle;"></text></pattern><marker id="SvgjsMarker1337" markerWidth="13" markerHeight="9" refX="9.5" refY="4.5" viewBox="0 0 13 9" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1338" d="M0,0 L13,4.5 L0,9 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1345" markerWidth="13" markerHeight="9" refX="9.5" refY="4.5" viewBox="0 0 13 9" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1346" d="M0,0 L13,4.5 L0,9 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1353" markerWidth="13" markerHeight="9" refX="9.5" refY="4.5" viewBox="0 0 13 9" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1354" d="M0,0 L13,4.5 L0,9 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1361" markerWidth="13" markerHeight="9" refX="9.5" refY="4.5" viewBox="0 0 13 9" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1362" d="M0,0 L13,4.5 L0,9 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1369" markerWidth="13" markerHeight="9" refX="9.5" refY="4.5" viewBox="0 0 13 9" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1370" d="M0,0 L13,4.5 L0,9 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1377" markerWidth="13" markerHeight="9" refX="9.5" refY="4.5" viewBox="0 0 13 9" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1378" d="M0,0 L13,4.5 L0,9 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker><marker id="SvgjsMarker1385" markerWidth="13" markerHeight="9" refX="9.5" refY="4.5" viewBox="0 0 13 9" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1386" d="M0,0 L13,4.5 L0,9 L0,0" fill="#323232" stroke="#323232" stroke-width="1"></path></marker></defs><rect id="svgbackgroundid" width="1797" height="1378" fill="transparent"></rect><rect id="SvgjsRect1009" width="1797" height="1378" fill="url(#pattern_mark_0)"></rect><rect id="SvgjsRect1010" width="1797" height="1378" fill="url(#pattern_mark_1)"></rect><g id="SvgjsG1011" transform="translate(934,54)"><path id="SvgjsPath1012" d="M 0 4Q 0 0 4 0L 365 0Q 369 0 369 4L 369 130Q 369 134 365 134L 4 134Q 0 134 0 130Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1013" d="M 0 30L 369 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1014" d="M 0 0L 369 0L 369 134L 0 134Z" stroke="none" fill="none"></path><g id="SvgjsG1015"><text id="SvgjsText1016" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="349px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1017" dy="16.25" x="184.5"><tspan id="SvgjsTspan1018" style="">AbstractQueuedSynchronizer</tspan></tspan></text></g><g id="SvgjsG1019"><text id="SvgjsText1020" font-family="微软雅黑" text-anchor="start" font-size="13px" width="349px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="38.875" transform="rotate(0)"><tspan id="SvgjsTspan1021" dy="16.25" x="10"><tspan id="SvgjsTspan1022" style="">public final void acquire(int arg) {</tspan></tspan><tspan id="SvgjsTspan1023" dy="16.25" x="10"><tspan id="SvgjsTspan1024" style="">    if (!tryAcquire(arg) &amp;&amp;</tspan></tspan><tspan id="SvgjsTspan1025" dy="16.25" x="10"><tspan id="SvgjsTspan1026" style="">        acquireQueued(addWaiter(Node.EXCLUSIVE), arg))</tspan></tspan><tspan id="SvgjsTspan1027" dy="16.25" x="10"><tspan id="SvgjsTspan1028" style="">        selfInterrupt();</tspan></tspan><tspan id="SvgjsTspan1029" dy="16.25" x="10"><tspan id="SvgjsTspan1030" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1031" transform="translate(465,288)"><path id="SvgjsPath1032" d="M 0 4Q 0 0 4 0L 365 0Q 369 0 369 4L 369 89Q 369 93 365 93L 4 93Q 0 93 0 89Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1033" d="M 0 30L 369 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1034" d="M 0 0L 369 0L 369 93L 0 93Z" stroke="none" fill="none"></path><g id="SvgjsG1035"><text id="SvgjsText1036" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="349px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1037" dy="16.25" x="184.5"><tspan id="SvgjsTspan1038" style="">AbstractQueuedSynchronizer</tspan></tspan></text></g><g id="SvgjsG1039"><text id="SvgjsText1040" font-family="微软雅黑" text-anchor="start" font-size="13px" width="349px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="34.375" transform="rotate(0)"><tspan id="SvgjsTspan1041" dy="16.25" x="10"><tspan id="SvgjsTspan1042" style="">protected boolean tryAcquire(int arg) {</tspan></tspan><tspan id="SvgjsTspan1043" dy="16.25" x="10"><tspan id="SvgjsTspan1044" style="">    throw new UnsupportedOperationException();</tspan></tspan><tspan id="SvgjsTspan1045" dy="16.25" x="10"><tspan id="SvgjsTspan1046" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1047" transform="translate(465,456)"><path id="SvgjsPath1048" d="M 0 4Q 0 0 4 0L 365 0Q 369 0 369 4L 369 89Q 369 93 365 93L 4 93Q 0 93 0 89Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1049" d="M 0 30L 369 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1050" d="M 0 0L 369 0L 369 93L 0 93Z" stroke="none" fill="none"></path><g id="SvgjsG1051"><text id="SvgjsText1052" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="349px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1053" dy="16.25" x="184.5"><tspan id="SvgjsTspan1054" style="">NonfairSync</tspan></tspan></text></g><g id="SvgjsG1055"><text id="SvgjsText1056" font-family="微软雅黑" text-anchor="start" font-size="13px" width="349px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="34.375" transform="rotate(0)"><tspan id="SvgjsTspan1057" dy="16.25" x="10"><tspan id="SvgjsTspan1058" style="">protected final boolean tryAcquire(int acquires) {</tspan></tspan><tspan id="SvgjsTspan1059" dy="16.25" x="10"><tspan id="SvgjsTspan1060" style="">    return nonfairTryAcquire(acquires);</tspan></tspan><tspan id="SvgjsTspan1061" dy="16.25" x="10"><tspan id="SvgjsTspan1062" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1063" transform="translate(25,456)"><path id="SvgjsPath1064" d="M 0 4Q 0 0 4 0L 371 0Q 375 0 375 4L 375 365Q 375 369 371 369L 4 369Q 0 369 0 365Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1065" d="M 0 30L 375 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1066" d="M 0 0L 375 0L 375 369L 0 369Z" stroke="none" fill="none"></path><g id="SvgjsG1067"><text id="SvgjsText1068" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="355px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1069" dy="16.25" x="187.5"><tspan id="SvgjsTspan1070" style="">FairSync</tspan></tspan></text></g><g id="SvgjsG1071"><text id="SvgjsText1072" font-family="微软雅黑" text-anchor="start" font-size="13px" width="355px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="34.375" transform="rotate(0)"><tspan id="SvgjsTspan1073" dy="16.25" x="10"><tspan id="SvgjsTspan1074" style="">protected final boolean tryAcquire(int acquires) {</tspan></tspan><tspan id="SvgjsTspan1075" dy="16.25" x="10"><tspan id="SvgjsTspan1076" style="">    final Thread current = Thread.currentThread();</tspan></tspan><tspan id="SvgjsTspan1077" dy="16.25" x="10"><tspan id="SvgjsTspan1078" style="">    int c = getState();</tspan></tspan><tspan id="SvgjsTspan1079" dy="16.25" x="10"><tspan id="SvgjsTspan1080" style="">    if (c == 0) {</tspan></tspan><tspan id="SvgjsTspan1081" dy="16.25" x="10"><tspan id="SvgjsTspan1082" style="">        if (!hasQueuedPredecessors() &amp;&amp;</tspan></tspan><tspan id="SvgjsTspan1083" dy="16.25" x="10"><tspan id="SvgjsTspan1084" style="">            compareAndSetState(0, acquires)) {</tspan></tspan><tspan id="SvgjsTspan1085" dy="16.25" x="10"><tspan id="SvgjsTspan1086" style="">            setExclusiveOwnerThread(current);</tspan></tspan><tspan id="SvgjsTspan1087" dy="16.25" x="10"><tspan id="SvgjsTspan1088" style="">            return true;</tspan></tspan><tspan id="SvgjsTspan1089" dy="16.25" x="10"><tspan id="SvgjsTspan1090" style="">        }</tspan></tspan><tspan id="SvgjsTspan1091" dy="16.25" x="10"><tspan id="SvgjsTspan1092" style="">    }</tspan></tspan><tspan id="SvgjsTspan1093" dy="16.25" x="10"><tspan id="SvgjsTspan1094" style="">    else if (current == getExclusiveOwnerThread()) {</tspan></tspan><tspan id="SvgjsTspan1095" dy="16.25" x="10"><tspan id="SvgjsTspan1096" style="">        int nextc = c + acquires;</tspan></tspan><tspan id="SvgjsTspan1097" dy="16.25" x="10"><tspan id="SvgjsTspan1098" style="">        if (nextc &lt; 0)</tspan></tspan><tspan id="SvgjsTspan1099" dy="16.25" x="10"><tspan id="SvgjsTspan1100" style="">            throw new Error("Maximum lock count exceeded"</tspan></tspan><tspan id="SvgjsTspan1101" dy="16.25" x="10"><tspan id="SvgjsTspan1102" style="">);</tspan></tspan><tspan id="SvgjsTspan1103" dy="16.25" x="10"><tspan id="SvgjsTspan1104" style="">        setState(nextc);</tspan></tspan><tspan id="SvgjsTspan1105" dy="16.25" x="10"><tspan id="SvgjsTspan1106" style="">        return true;</tspan></tspan><tspan id="SvgjsTspan1107" dy="16.25" x="10"><tspan id="SvgjsTspan1108" style="">    }</tspan></tspan><tspan id="SvgjsTspan1109" dy="16.25" x="10"><tspan id="SvgjsTspan1110" style="">    return false;</tspan></tspan><tspan id="SvgjsTspan1111" dy="16.25" x="10"><tspan id="SvgjsTspan1112" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1113" transform="translate(934,288)"><path id="SvgjsPath1114" d="M 0 4Q 0 0 4 0L 365 0Q 369 0 369 4L 369 300Q 369 304 365 304L 4 304Q 0 304 0 300Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1115" d="M 0 30L 369 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1116" d="M 0 0L 369 0L 369 304L 0 304Z" stroke="none" fill="none"></path><g id="SvgjsG1117"><text id="SvgjsText1118" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="349px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1119" dy="16.25" x="184.5"><tspan id="SvgjsTspan1120" style="">AbstractQueuedSynchronizer</tspan></tspan></text></g><g id="SvgjsG1121"><text id="SvgjsText1122" font-family="微软雅黑" text-anchor="start" font-size="13px" width="349px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="34.375" transform="rotate(0)"><tspan id="SvgjsTspan1123" dy="16.25" x="10"><tspan id="SvgjsTspan1124" style="">private Node addWaiter(Node mode) {</tspan></tspan><tspan id="SvgjsTspan1125" dy="16.25" x="10"><tspan id="SvgjsTspan1126" style="">    Node node = new Node(Thread.currentThread(), mode</tspan></tspan><tspan id="SvgjsTspan1127" dy="16.25" x="10"><tspan id="SvgjsTspan1128" style="">);</tspan></tspan><tspan id="SvgjsTspan1129" dy="16.25" x="10"><tspan id="SvgjsTspan1130" style="">    // Try the fast path of enq; backup to full enq on failu</tspan></tspan><tspan id="SvgjsTspan1131" dy="16.25" x="10"><tspan id="SvgjsTspan1132" style="">re</tspan></tspan><tspan id="SvgjsTspan1133" dy="16.25" x="10"><tspan id="SvgjsTspan1134" style="">    Node pred = tail;</tspan></tspan><tspan id="SvgjsTspan1135" dy="16.25" x="10"><tspan id="SvgjsTspan1136" style="">    if (pred != null) {</tspan></tspan><tspan id="SvgjsTspan1137" dy="16.25" x="10"><tspan id="SvgjsTspan1138" style="">        node.prev = pred;</tspan></tspan><tspan id="SvgjsTspan1139" dy="16.25" x="10"><tspan id="SvgjsTspan1140" style="">        if (compareAndSetTail(pred, node)) {</tspan></tspan><tspan id="SvgjsTspan1141" dy="16.25" x="10"><tspan id="SvgjsTspan1142" style="">            pred.next = node;</tspan></tspan><tspan id="SvgjsTspan1143" dy="16.25" x="10"><tspan id="SvgjsTspan1144" style="">            return node;</tspan></tspan><tspan id="SvgjsTspan1145" dy="16.25" x="10"><tspan id="SvgjsTspan1146" style="">        }</tspan></tspan><tspan id="SvgjsTspan1147" dy="16.25" x="10"><tspan id="SvgjsTspan1148" style="">    }</tspan></tspan><tspan id="SvgjsTspan1149" dy="16.25" x="10"><tspan id="SvgjsTspan1150" style="">    enq(node);</tspan></tspan><tspan id="SvgjsTspan1151" dy="16.25" x="10"><tspan id="SvgjsTspan1152" style="">    return node;</tspan></tspan><tspan id="SvgjsTspan1153" dy="16.25" x="10"><tspan id="SvgjsTspan1154" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1155" transform="translate(1403,288)"><path id="SvgjsPath1156" d="M 0 4Q 0 0 4 0L 365 0Q 369 0 369 4L 369 381Q 369 385 365 385L 4 385Q 0 385 0 381Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1157" d="M 0 30L 369 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1158" d="M 0 0L 369 0L 369 385L 0 385Z" stroke="none" fill="none"></path><g id="SvgjsG1159"><text id="SvgjsText1160" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="349px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1161" dy="16.25" x="184.5"><tspan id="SvgjsTspan1162" style="">AbstractQueuedSynchronizer</tspan></tspan></text></g><g id="SvgjsG1163"><text id="SvgjsText1164" font-family="微软雅黑" text-anchor="start" font-size="13px" width="349px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="34.375" transform="rotate(0)"><tspan id="SvgjsTspan1165" dy="16.25" x="10"><tspan id="SvgjsTspan1166" style="">final boolean acquireQueued(final Node node, int arg) {</tspan></tspan><tspan id="SvgjsTspan1167" dy="16.25" x="10"><tspan id="SvgjsTspan1168" style="">    boolean failed = true;</tspan></tspan><tspan id="SvgjsTspan1169" dy="16.25" x="10"><tspan id="SvgjsTspan1170" style="">    try {</tspan></tspan><tspan id="SvgjsTspan1171" dy="16.25" x="10"><tspan id="SvgjsTspan1172" style="">        boolean interrupted = false;</tspan></tspan><tspan id="SvgjsTspan1173" dy="16.25" x="10"><tspan id="SvgjsTspan1174" style="">        for (;;) {</tspan></tspan><tspan id="SvgjsTspan1175" dy="16.25" x="10"><tspan id="SvgjsTspan1176" style="">            final Node p = node.predecessor();</tspan></tspan><tspan id="SvgjsTspan1177" dy="16.25" x="10"><tspan id="SvgjsTspan1178" style="">            if (p == head &amp;&amp; tryAcquire(arg)) {</tspan></tspan><tspan id="SvgjsTspan1179" dy="16.25" x="10"><tspan id="SvgjsTspan1180" style="">                setHead(node);</tspan></tspan><tspan id="SvgjsTspan1181" dy="16.25" x="10"><tspan id="SvgjsTspan1182" style="">                p.next = null; // help GC</tspan></tspan><tspan id="SvgjsTspan1183" dy="16.25" x="10"><tspan id="SvgjsTspan1184" style="">                failed = false;</tspan></tspan><tspan id="SvgjsTspan1185" dy="16.25" x="10"><tspan id="SvgjsTspan1186" style="">                return interrupted;</tspan></tspan><tspan id="SvgjsTspan1187" dy="16.25" x="10"><tspan id="SvgjsTspan1188" style="">            }</tspan></tspan><tspan id="SvgjsTspan1189" dy="16.25" x="10"><tspan id="SvgjsTspan1190" style="">            if (shouldParkAfterFailedAcquire(p, node) &amp;&amp;</tspan></tspan><tspan id="SvgjsTspan1191" dy="16.25" x="10"><tspan id="SvgjsTspan1192" style="">                parkAndCheckInterrupt())</tspan></tspan><tspan id="SvgjsTspan1193" dy="16.25" x="10"><tspan id="SvgjsTspan1194" style="">                interrupted = true;</tspan></tspan><tspan id="SvgjsTspan1195" dy="16.25" x="10"><tspan id="SvgjsTspan1196" style="">        }</tspan></tspan><tspan id="SvgjsTspan1197" dy="16.25" x="10"><tspan id="SvgjsTspan1198" style="">    } finally {</tspan></tspan><tspan id="SvgjsTspan1199" dy="16.25" x="10"><tspan id="SvgjsTspan1200" style="">        if (failed)</tspan></tspan><tspan id="SvgjsTspan1201" dy="16.25" x="10"><tspan id="SvgjsTspan1202" style="">            cancelAcquire(node);</tspan></tspan><tspan id="SvgjsTspan1203" dy="16.25" x="10"><tspan id="SvgjsTspan1204" style="">    }</tspan></tspan><tspan id="SvgjsTspan1205" dy="16.25" x="10"><tspan id="SvgjsTspan1206" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1207" transform="translate(934,692)"><path id="SvgjsPath1208" d="M 0 4Q 0 0 4 0L 365 0Q 369 0 369 4L 369 381Q 369 385 365 385L 4 385Q 0 385 0 381Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1209" d="M 0 30L 369 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1210" d="M 0 0L 369 0L 369 385L 0 385Z" stroke="none" fill="none"></path><g id="SvgjsG1211"><text id="SvgjsText1212" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="349px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1213" dy="16.25" x="184.5"><tspan id="SvgjsTspan1214" style="">AbstractQueuedSynchronizer</tspan></tspan></text></g><g id="SvgjsG1215"><text id="SvgjsText1216" font-family="微软雅黑" text-anchor="start" font-size="13px" width="349px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="34.375" transform="rotate(0)"><tspan id="SvgjsTspan1217" dy="16.25" x="10"><tspan id="SvgjsTspan1218" style="">final boolean acquireQueued(final Node node, int arg) {</tspan></tspan><tspan id="SvgjsTspan1219" dy="16.25" x="10"><tspan id="SvgjsTspan1220" style="">    boolean failed = true;</tspan></tspan><tspan id="SvgjsTspan1221" dy="16.25" x="10"><tspan id="SvgjsTspan1222" style="">    try {</tspan></tspan><tspan id="SvgjsTspan1223" dy="16.25" x="10"><tspan id="SvgjsTspan1224" style="">        boolean interrupted = false;</tspan></tspan><tspan id="SvgjsTspan1225" dy="16.25" x="10"><tspan id="SvgjsTspan1226" style="">        for (;;) {</tspan></tspan><tspan id="SvgjsTspan1227" dy="16.25" x="10"><tspan id="SvgjsTspan1228" style="">            final Node p = node.predecessor();</tspan></tspan><tspan id="SvgjsTspan1229" dy="16.25" x="10"><tspan id="SvgjsTspan1230" style="">            if (p == head &amp;&amp; tryAcquire(arg)) {</tspan></tspan><tspan id="SvgjsTspan1231" dy="16.25" x="10"><tspan id="SvgjsTspan1232" style="">                setHead(node);</tspan></tspan><tspan id="SvgjsTspan1233" dy="16.25" x="10"><tspan id="SvgjsTspan1234" style="">                p.next = null; // help GC</tspan></tspan><tspan id="SvgjsTspan1235" dy="16.25" x="10"><tspan id="SvgjsTspan1236" style="">                failed = false;</tspan></tspan><tspan id="SvgjsTspan1237" dy="16.25" x="10"><tspan id="SvgjsTspan1238" style="">                return interrupted;</tspan></tspan><tspan id="SvgjsTspan1239" dy="16.25" x="10"><tspan id="SvgjsTspan1240" style="">            }</tspan></tspan><tspan id="SvgjsTspan1241" dy="16.25" x="10"><tspan id="SvgjsTspan1242" style="">            if (shouldParkAfterFailedAcquire(p, node) &amp;&amp;</tspan></tspan><tspan id="SvgjsTspan1243" dy="16.25" x="10"><tspan id="SvgjsTspan1244" style="">                parkAndCheckInterrupt())</tspan></tspan><tspan id="SvgjsTspan1245" dy="16.25" x="10"><tspan id="SvgjsTspan1246" style="">                interrupted = true;</tspan></tspan><tspan id="SvgjsTspan1247" dy="16.25" x="10"><tspan id="SvgjsTspan1248" style="">        }</tspan></tspan><tspan id="SvgjsTspan1249" dy="16.25" x="10"><tspan id="SvgjsTspan1250" style="">    } finally {</tspan></tspan><tspan id="SvgjsTspan1251" dy="16.25" x="10"><tspan id="SvgjsTspan1252" style="">        if (failed)</tspan></tspan><tspan id="SvgjsTspan1253" dy="16.25" x="10"><tspan id="SvgjsTspan1254" style="">            cancelAcquire(node);</tspan></tspan><tspan id="SvgjsTspan1255" dy="16.25" x="10"><tspan id="SvgjsTspan1256" style="">    }</tspan></tspan><tspan id="SvgjsTspan1257" dy="16.25" x="10"><tspan id="SvgjsTspan1258" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1259" transform="translate(1403,773)"><path id="SvgjsPath1260" d="M 0 4Q 0 0 4 0L 365 0Q 369 0 369 4L 369 576Q 369 580 365 580L 4 580Q 0 580 0 576Z" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill-opacity="1" fill="#ffffff"></path><path id="SvgjsPath1261" d="M 0 30L 369 30" stroke="rgba(33,41,48,1)" stroke-width="1.5" fill="none"></path><path id="SvgjsPath1262" d="M 0 0L 369 0L 369 580L 0 580Z" stroke="none" fill="none"></path><g id="SvgjsG1263"><text id="SvgjsText1264" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="349px" fill="#323232" font-weight="700" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="4.375" transform="rotate(0)"><tspan id="SvgjsTspan1265" dy="16.25" x="184.5"><tspan id="SvgjsTspan1266" style="">AbstractQueuedSynchronizer</tspan></tspan></text></g><g id="SvgjsG1267"><text id="SvgjsText1268" font-family="微软雅黑" text-anchor="start" font-size="13px" width="349px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="34.375" transform="rotate(0)"><tspan id="SvgjsTspan1269" dy="16.25" x="10"><tspan id="SvgjsTspan1270" style="">private void cancelAcquire(Node node) {</tspan></tspan><tspan id="SvgjsTspan1271" dy="16.25" x="10"><tspan id="SvgjsTspan1272" style="">    if (node == null)</tspan></tspan><tspan id="SvgjsTspan1273" dy="16.25" x="10"><tspan id="SvgjsTspan1274" style="">        return;</tspan></tspan><tspan id="SvgjsTspan1275" dy="16.25" x="10"><tspan id="SvgjsTspan1276" style=""> </tspan></tspan><tspan id="SvgjsTspan1277" dy="16.25" x="10"><tspan id="SvgjsTspan1278" style="">    node.thread = null;</tspan></tspan><tspan id="SvgjsTspan1279" dy="16.25" x="10"><tspan id="SvgjsTspan1280" style=""> </tspan></tspan><tspan id="SvgjsTspan1281" dy="16.25" x="10"><tspan id="SvgjsTspan1282" style="">    Node pred = node.prev;</tspan></tspan><tspan id="SvgjsTspan1283" dy="16.25" x="10"><tspan id="SvgjsTspan1284" style="">    while (pred.waitStatus &gt; 0)</tspan></tspan><tspan id="SvgjsTspan1285" dy="16.25" x="10"><tspan id="SvgjsTspan1286" style="">        node.prev = pred = pred.prev;</tspan></tspan><tspan id="SvgjsTspan1287" dy="16.25" x="10"><tspan id="SvgjsTspan1288" style=""> </tspan></tspan><tspan id="SvgjsTspan1289" dy="16.25" x="10"><tspan id="SvgjsTspan1290" style="">    Node predNext = pred.next;</tspan></tspan><tspan id="SvgjsTspan1291" dy="16.25" x="10"><tspan id="SvgjsTspan1292" style=""> </tspan></tspan><tspan id="SvgjsTspan1293" dy="16.25" x="10"><tspan id="SvgjsTspan1294" style="">    node.waitStatus = Node.CANCELLED;</tspan></tspan><tspan id="SvgjsTspan1295" dy="16.25" x="10"><tspan id="SvgjsTspan1296" style=""> </tspan></tspan><tspan id="SvgjsTspan1297" dy="16.25" x="10"><tspan id="SvgjsTspan1298" style="">    if (node == tail &amp;&amp; compareAndSetTail(node, pred)) {</tspan></tspan><tspan id="SvgjsTspan1299" dy="16.25" x="10"><tspan id="SvgjsTspan1300" style="">        compareAndSetNext(pred, predNext, null);</tspan></tspan><tspan id="SvgjsTspan1301" dy="16.25" x="10"><tspan id="SvgjsTspan1302" style="">    } else {</tspan></tspan><tspan id="SvgjsTspan1303" dy="16.25" x="10"><tspan id="SvgjsTspan1304" style="">        int ws;</tspan></tspan><tspan id="SvgjsTspan1305" dy="16.25" x="10"><tspan id="SvgjsTspan1306" style="">        if (pred != head &amp;&amp;</tspan></tspan><tspan id="SvgjsTspan1307" dy="16.25" x="10"><tspan id="SvgjsTspan1308" style="">            ((ws = pred.waitStatus) == Node.SIGNAL ||</tspan></tspan><tspan id="SvgjsTspan1309" dy="16.25" x="10"><tspan id="SvgjsTspan1310" style="">             (ws &lt;= 0 &amp;&amp; compareAndSetWaitStatus(pred, w</tspan></tspan><tspan id="SvgjsTspan1311" dy="16.25" x="10"><tspan id="SvgjsTspan1312" style="">s, Node.SIGNAL))) &amp;&amp;</tspan></tspan><tspan id="SvgjsTspan1313" dy="16.25" x="10"><tspan id="SvgjsTspan1314" style="">            pred.thread != null) {</tspan></tspan><tspan id="SvgjsTspan1315" dy="16.25" x="10"><tspan id="SvgjsTspan1316" style="">            Node next = node.next;</tspan></tspan><tspan id="SvgjsTspan1317" dy="16.25" x="10"><tspan id="SvgjsTspan1318" style="">            if (next != null &amp;&amp; next.waitStatus &lt;= 0)</tspan></tspan><tspan id="SvgjsTspan1319" dy="16.25" x="10"><tspan id="SvgjsTspan1320" style="">                compareAndSetNext(pred, predNext, next);</tspan></tspan><tspan id="SvgjsTspan1321" dy="16.25" x="10"><tspan id="SvgjsTspan1322" style="">        } else {</tspan></tspan><tspan id="SvgjsTspan1323" dy="16.25" x="10"><tspan id="SvgjsTspan1324" style="">            unparkSuccessor(node);</tspan></tspan><tspan id="SvgjsTspan1325" dy="16.25" x="10"><tspan id="SvgjsTspan1326" style="">        }</tspan></tspan><tspan id="SvgjsTspan1327" dy="16.25" x="10"><tspan id="SvgjsTspan1328" style=""> </tspan></tspan><tspan id="SvgjsTspan1329" dy="16.25" x="10"><tspan id="SvgjsTspan1330" style="">        node.next = node; // help GC</tspan></tspan><tspan id="SvgjsTspan1331" dy="16.25" x="10"><tspan id="SvgjsTspan1332" style="">    }</tspan></tspan><tspan id="SvgjsTspan1333" dy="16.25" x="10"><tspan id="SvgjsTspan1334" style="">}</tspan></tspan></text></g></g><g id="SvgjsG1335"><path id="SvgjsPath1336" d="M1118.5 188.75L1118.5 238L1118.5 238L1118.5 285.3" stroke="#323232" stroke-width="1.5" fill="none" marker-end="url(#SvgjsMarker1337)"></path><rect id="SvgjsRect1339" width="109" height="16" x="1064" y="247.36950000000002" fill="#ffffff"></rect><text id="SvgjsText1340" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="109px" fill="#a7932c" font-weight="700" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="244.74450000000002" transform="rotate(0)"><tspan id="SvgjsTspan1341" dy="16.25" x="1118.5"><tspan id="SvgjsTspan1342" style="">2. 调用 addWaiter</tspan></tspan></text></g><g id="SvgjsG1343"><path id="SvgjsPath1344" d="M1118.5 188.75L1118.5 238L649.5 238L649.5 285.3" stroke="#323232" stroke-width="1.5" fill="none" marker-end="url(#SvgjsMarker1345)"></path><rect id="SvgjsRect1347" width="107" height="16" x="813.5841388400704" y="230" fill="#ffffff"></rect><text id="SvgjsText1348" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="107px" fill="#a7932c" font-weight="700" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="227.375" transform="rotate(0)"><tspan id="SvgjsTspan1349" dy="16.25" x="867.0841388400704"><tspan id="SvgjsTspan1350" style="">1. 调用 tryAcquire</tspan></tspan></text></g><g id="SvgjsG1351"><path id="SvgjsPath1352" d="M1118.5 188.75L1118.5 238L1587.5 238L1587.5 285.3" stroke="#323232" stroke-width="1.5" fill="none" marker-end="url(#SvgjsMarker1353)"></path><rect id="SvgjsRect1355" width="140" height="16" x="1280.0371265377855" y="230" fill="#ffffff"></rect><text id="SvgjsText1356" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="140px" fill="#a7932c" font-weight="700" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="227.375" transform="rotate(0)"><tspan id="SvgjsTspan1357" dy="16.25" x="1350.0371265377855"><tspan id="SvgjsTspan1358" style="">3. 调用 acquireQueued</tspan></tspan></text></g><g id="SvgjsG1359"><path id="SvgjsPath1360" d="M649.5 381.75L649.5 418.5L649.5 418.5L649.5 453.3" stroke="#323232" stroke-width="1.5" fill="none" marker-end="url(#SvgjsMarker1361)"></path><rect id="SvgjsRect1363" width="162" height="16" x="568.5" y="413.818" fill="#ffffff"></rect><text id="SvgjsText1364" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="162px" fill="#a7932c" font-weight="700" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="411.193" transform="rotate(0)"><tspan id="SvgjsTspan1365" dy="16.25" x="649.5"><tspan id="SvgjsTspan1366" style="">交由子类 NonfairSync 实现</tspan></tspan></text></g><g id="SvgjsG1367"><path id="SvgjsPath1368" d="M649.5 381.75L649.5 404.5L212.5 404.5L212.5 453.3" stroke="#323232" stroke-width="1.5" fill="none" marker-end="url(#SvgjsMarker1369)"></path><rect id="SvgjsRect1371" width="140" height="16" x="362.87392578124997" y="396.5" fill="#ffffff"></rect><text id="SvgjsText1372" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="140px" fill="#a7932c" font-weight="700" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="393.875" transform="rotate(0)"><tspan id="SvgjsTspan1373" dy="16.25" x="432.87392578124997"><tspan id="SvgjsTspan1374" style="">交由子类 FairSync 实现</tspan></tspan></text></g><g id="SvgjsG1375"><path id="SvgjsPath1376" d="M1118.5 592.75L1118.5 642L1118.5 642L1118.5 689.3" stroke="#323232" stroke-width="1.5" fill="none" marker-end="url(#SvgjsMarker1377)"></path><rect id="SvgjsRect1379" width="79" height="16" x="1079" y="630.1285" fill="#ffffff"></rect><text id="SvgjsText1380" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="79px" fill="#a7932c" font-weight="700" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="627.5035" transform="rotate(0)"><tspan id="SvgjsTspan1381" dy="16.25" x="1118.5"><tspan id="SvgjsTspan1382" style="">enq 入队操作</tspan></tspan></text></g><g id="SvgjsG1383"><path id="SvgjsPath1384" d="M1587.5 673.75L1587.5 723L1587.5 723L1587.5 770.3" stroke="#323232" stroke-width="1.5" fill="none" marker-end="url(#SvgjsMarker1385)"></path><rect id="SvgjsRect1387" width="118" height="16" x="1528.5" y="714.025" fill="#ffffff"></rect><text id="SvgjsText1388" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="118px" fill="#a7932c" font-weight="700" align="top" lineHeight="16px" anchor="middle" family="微软雅黑" size="13px" weight="700" font-style="" opacity="1" y="711.4" transform="rotate(0)"><tspan id="SvgjsTspan1389" dy="16.25" x="1587.5"><tspan id="SvgjsTspan1390" style="">调用 cancelAcquire</tspan></tspan></text></g><g id="SvgjsG1391" transform="translate(1025.25,25)"><path id="SvgjsPath1392" d="M 0 0L 186.5 0L 186.5 29.375L 0 29.375Z" stroke="none" fill="none"></path><g id="SvgjsG1393"><text id="SvgjsText1394" font-family="微软雅黑" text-anchor="middle" font-size="13px" width="187px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="4.0625" transform="rotate(0)"><tspan id="SvgjsTspan1395" dy="16.25" x="93.5"><tspan id="SvgjsTspan1396" style="font-weight: bold;fill: rgb(167, 147, 44);">AQS acquire 主要有三条流程</tspan></tspan></text></g></g></svg>